version: 2.1
orbs:
  aws-cli: circleci/aws-cli@4.1.3
  ruby: circleci/ruby@2.0.0

jobs:
  cfn-lint:
    # executor: python/default　実行環境としてOrb由来使わずDockerイメージを使うので無効化
    docker:
      - image: cimg/python:3.12.0

    steps:
      - checkout
      - run: python --version
      - run: pip install --upgrade pip
      - run: pip --version
      - run: pip install cfn-lint
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3010 -t cloudformation/*.yml

  execute-cfn:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/assume_role_with_web_identity:
          profile_name: "OIDC-PROFILE"
          role_arn: $AWS_ROLE_ARN
          region: $AWS_DEFAULT_REGION

      # - aws-cli/setup:
      #     aws-access-key-id: AWS_ACCESS_KEY_ID
      #     aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      #     aws-region: AWS_DEFAULT_REGION
      - run:
          name: cloudformation deploy
          command: |
            set -x
            aws cloudformation deploy --template-file cloudformation/vpc-01.yml --stack-name vpc-01 --role-arn $AWS_ROLE_ARN
            aws cloudformation deploy --template-file cloudformation/sg-02.yml --stack-name sg-02
            aws cloudformation deploy --template-file cloudformation/ec2-03.yml --stack-name ec2_03  --capabilities CAPABILITY_IAM
            aws cloudformation deploy --template-file cloudformation/rds-04.yml --stack-name rds-04
            aws cloudformation deploy --template-file cloudformation/alb-05.yml --stack-name alb-05
            aws cloudformation deploy --template-file cloudformation/s3-06.yml --stack-name s3-06
      - run: 
          name: set AWS_ALB_DNS
          command: |
            set -x
            echo export AWS_ALB_DNS="$(aws cloudformation describe-stacks --stack-name alb-05 | jq -r '.Stacks[] | .Outputs[] | select(.OutputKey == "LoadBalancerDNSName")| .OutputValue')" >> $BASH_ENV    
            source $BASH_ENV 
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
  
  execute-ansible:
    docker:
      - image: cimg/python:3.12.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "${KEY_FINGERPRINT}"
      - run: python --version
      - run: pip install --upgrade pip
      - run: pip --version
      - run: 
          name: install ansible
          command: pip install ansible==9.6.0 #バージョン指定なしの場合で2.17がインストールされたときにruby環境構築用の各種パッケージがyumモジュールで入らなかったのでバージョン指定しました(core:2.16.7)
      - run: ansible --version
      - run:
          name: Execute Ansible Playbook
          command: ansible-playbook -i ansible/inventory ansible/site.yml
          
  
  # execute-serverspec:
  #   executor: ruby/default
  #   steps:
  #     - checkout
  #     # サーバーのセットアップ
  #     - run:
  #         name: bundle install
  #         command: |
  #           cd serverspec
  #           gem list -e rails
  #           bundle install --path vendor/bundle

  #     # Serverspecのテストを実行
  #     - run:
  #         name: execute serverspec
  #         command: |
  #           cd serverspec
  #           bundle exec rake spec



workflows:
  CircleCItest:
    jobs:
      - cfn-lint
      - execute-cfn:
          context: aws
          requires:
            - cfn-lint
      - execute-ansible:
          requires:
            - execute-cfn
      # - execute-serverspec:
      #     requires:
      #       - execute-ansible
